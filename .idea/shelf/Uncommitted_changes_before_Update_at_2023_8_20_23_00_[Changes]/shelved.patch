Index: main/src/main/java/com/hi/main/ui/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hi.main.ui\r\n\r\nimport android.content.Intent\r\nimport androidx.activity.viewModels\r\nimport androidx.core.os.bundleOf\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.recyclerview.widget.GridLayoutManager\r\nimport com.hi.common.BaseActivity\r\nimport com.hi.common.adapter.ItemCell\r\nimport com.hi.common.adapter.StableAdapter\r\nimport com.hi.common.constant.BundleConst\r\nimport com.hi.common.constant.RouterPath\r\nimport com.hi.common.data.HhResult\r\nimport com.hi.common.data.WanResponse\r\nimport com.hi.common.data.response.Banner\r\nimport com.hi.common.ktx.createStableAdapter\r\nimport com.hi.common.ktx.intent.ActivityForResultFactory\r\nimport com.hi.common.ktx.intent.RequestPermissionsFactory\r\nimport com.hi.common.ktx.intent.intentOf\r\nimport com.hi.common.ktx.intent.startActivity\r\nimport com.hi.common.ktx.navigate\r\nimport com.hi.common.ktx.toast\r\nimport com.hi.common.ktx.toolbar\r\nimport com.hi.main.R\r\nimport com.hi.main.cells.BtnCell\r\nimport com.hi.main.databinding.ActivityMainBinding\r\nimport com.hi.main.vm.HhHiltViewModel\r\nimport dagger.hilt.android.AndroidEntryPoint\r\nimport javax.inject.Inject\r\nimport kotlin.concurrent.thread\r\n\r\n/**\r\n * Created by xuz on 2020/4/1 23:14\r\n */\r\n@AndroidEntryPoint\r\nclass MainActivity : BaseActivity<ActivityMainBinding>() {\r\n    private lateinit var mAdapter: StableAdapter\r\n\r\n    private val hiltViewModel: HhHiltViewModel by viewModels()\r\n\r\n    @Inject\r\n    lateinit var permissionsFactory: RequestPermissionsFactory\r\n\r\n    @Inject\r\n    lateinit var activityForResultFactory: ActivityForResultFactory\r\n\r\n\r\n    private val liveData = MutableLiveData<Int>()\r\n\r\n\r\n    override fun init() {\r\n        toolbar(\"首页\", false)\r\n        thread {\r\n            liveData.postValue(10)\r\n        }\r\n        subscribeBanner()\r\n        mAdapter = createStableAdapter {\r\n            onSimpleCallback { position ->\r\n                val itemCell = mAdapter.currentList()[position] as BtnCell\r\n                when (itemCell.itemId()) {\r\n                    getString(R.string.sample_recycler) ->\r\n                        activityForResultFactory.launch(\r\n                            intentOf<SampleRecyclerActivity>(\r\n                                bundleOf(BundleConst.SAMPLE_ACTIVITY to \"FROM MAIN\")\r\n                            )\r\n                        ) {\r\n                            onOk {\r\n                                toast(it?.getStringExtra(BundleConst.SAMPLE_ACTIVITY) ?: \"\")\r\n                            }\r\n                            onCancel {\r\n\r\n                            }\r\n                        }\r\n                    getString(R.string.request_permission) -> {\r\n                        permissionsFactory.launch(\r\n                            arrayOf(\r\n                                android.Manifest.permission.READ_EXTERNAL_STORAGE,\r\n                                android.Manifest.permission.WRITE_EXTERNAL_STORAGE\r\n                            )\r\n                        ) {\r\n                            onGranted {\r\n                                toast(\"onGranted\")\r\n                            }\r\n                            onDenied {\r\n                                toast(\"onDenied\")\r\n                            }\r\n                        }\r\n                    }\r\n                    getString(R.string.coordinator_layout) -> startActivity<TopFoldActivity>()\r\n                    getString(R.string.page_layout) -> startActivity<PageRecyclerActivity>()\r\n                    getString(R.string.hilt_network) -> hiltViewModel.getBanner()\r\n                    getString(R.string.smart_refresh_layout) -> {\r\n                        val intent = Intent(this@MainActivity, SmartRefreshActivity::class.java)\r\n                        startActivity(intent)\r\n                    }\r\n                    getString(R.string.room_test) -> startActivity<RoomTestActivity>()\r\n                    getString(R.string.select_img) -> startActivity<SelectImgActivity>()\r\n                    getString(R.string.flow_layout) -> startActivity<FlowLayoutTestActivity>()\r\n                    /*测试路由的话，打开test1模块,gradle.properties(project)->test1_dev=1*/\r\n                    getString(R.string.a_route) -> navigate(RouterPath.TEST_MAIN)\r\n                    getString(R.string.time_line) -> startActivity<TimeLineActivity>()\r\n                    getString(R.string.flow_layout2) -> startActivity<FlowLayoutActivity>()\r\n                }\r\n            }\r\n        }\r\n        bind.recycler.apply {\r\n            adapter = mAdapter\r\n            layoutManager = GridLayoutManager(this@MainActivity, 2)\r\n        }\r\n    }\r\n\r\n    private fun subscribeBanner() {\r\n        hiltViewModel.bannerData.observe(this) {\r\n            when (it) {\r\n                is HhResult.Success<WanResponse<List<Banner>>> -> {\r\n                    toast(it.value.data.toString())\r\n                }\r\n                is HhResult.Failure -> {\r\n                    toast(it.throwable.toString())\r\n                }\r\n                else -> {}\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun viewDrawn() {\r\n        super.viewDrawn()\r\n        val itemCellList = mutableListOf<ItemCell>()\r\n        itemCellList.add(BtnCell(getString(R.string.sample_recycler)))\r\n        itemCellList.add(BtnCell(getString(R.string.request_permission)))\r\n        itemCellList.add(BtnCell(getString(R.string.coordinator_layout)))\r\n        itemCellList.add(BtnCell(getString(R.string.page_layout)))\r\n        itemCellList.add(BtnCell(getString(R.string.hilt_network)))\r\n        itemCellList.add(BtnCell(getString(R.string.smart_refresh_layout)))\r\n        itemCellList.add(BtnCell(getString(R.string.room_test)))\r\n        itemCellList.add(BtnCell(getString(R.string.select_img)))\r\n        itemCellList.add(BtnCell(getString(R.string.flow_layout)))\r\n        itemCellList.add(BtnCell(getString(R.string.a_route)))\r\n        itemCellList.add(BtnCell(getString(R.string.flow_layout2)))\r\n        itemCellList.add(BtnCell(getString(R.string.time_line)))\r\n        mAdapter.submitList(itemCellList)\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main/src/main/java/com/hi/main/ui/MainActivity.kt b/main/src/main/java/com/hi/main/ui/MainActivity.kt
--- a/main/src/main/java/com/hi/main/ui/MainActivity.kt	(revision 89aaff02c7d9a7bf84366a066f25aebbd190b50d)
+++ b/main/src/main/java/com/hi/main/ui/MainActivity.kt	(date 1692543576022)
@@ -140,4 +140,6 @@
         itemCellList.add(BtnCell(getString(R.string.time_line)))
         mAdapter.submitList(itemCellList)
     }
+
+
 }
Index: common/src/main/java/com/hi/common/ktx/ViewListener.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hi.common.ktx\r\n\r\nimport android.content.Context\r\nimport android.view.View\r\nimport android.widget.Toast\r\n\r\n/**\r\n * 防抖点击\r\n */\r\ninline fun View.debounceClick(\r\n    skipTime: Long = 500,\r\n    crossinline click: (v: View) -> Unit = {}\r\n) {\r\n    var latestClick = 0L\r\n    setOnClickListener {\r\n        val currentClick = System.currentTimeMillis()\r\n        if (currentClick - latestClick > skipTime) {\r\n            latestClick = currentClick\r\n            click.invoke(it)\r\n        }\r\n    }\r\n}\r\n\r\nfun Context.toast(txt: String) {\r\n    Toast.makeText(applicationContext, txt, Toast.LENGTH_LONG).show()\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/common/src/main/java/com/hi/common/ktx/ViewListener.kt b/common/src/main/java/com/hi/common/ktx/ViewListener.kt
--- a/common/src/main/java/com/hi/common/ktx/ViewListener.kt	(revision 89aaff02c7d9a7bf84366a066f25aebbd190b50d)
+++ b/common/src/main/java/com/hi/common/ktx/ViewListener.kt	(date 1692543575995)
@@ -23,4 +23,5 @@
 
 fun Context.toast(txt: String) {
     Toast.makeText(applicationContext, txt, Toast.LENGTH_LONG).show()
-}
\ No newline at end of file
+}
+
Index: test1/src/main/java/com/hi/test1/Test1Activity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hi.test1\r\n\r\nimport android.os.Bundle\r\nimport androidx.activity.ComponentActivity\r\nimport androidx.activity.compose.setContent\r\nimport androidx.compose.material.MaterialTheme\r\nimport androidx.compose.material.Text\r\nimport androidx.compose.runtime.Composable\r\nimport androidx.compose.ui.tooling.preview.Preview\r\nimport com.alibaba.android.arouter.facade.annotation.Route\r\nimport com.hi.common.constant.RouterPath\r\n\r\n@Route(path = RouterPath.TEST_MAIN)\r\nclass Test1Activity : ComponentActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContent {\r\n            MaterialTheme {\r\n                Text(\"Hello world\")\r\n            }\r\n        }\r\n    }\r\n\r\n    @Preview\r\n    @Composable\r\n    fun PreviewMessage(msg:String){\r\n        Text(msg)\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/test1/src/main/java/com/hi/test1/Test1Activity.kt b/test1/src/main/java/com/hi/test1/Test1Activity.kt
--- a/test1/src/main/java/com/hi/test1/Test1Activity.kt	(revision 89aaff02c7d9a7bf84366a066f25aebbd190b50d)
+++ b/test1/src/main/java/com/hi/test1/Test1Activity.kt	(date 1677839156399)
@@ -23,7 +23,9 @@
 
     @Preview
     @Composable
-    fun PreviewMessage(msg:String){
-        Text(msg)
+    fun UIUse(){
+        MaterialTheme {
+            Text("Hello world")
+        }
     }
 }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/AndroidProjects/hh/main/src/main/res/menu/select_img_activity_menu.xml\" value=\"0.17552083333333332\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/hh/main/src/main/res/layout/item_img.xml\" value=\"0.12001811594202899\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n  <component name=\"masterDetails\">\r\n    <states>\r\n      <state key=\"ProjectJDKs.UI\">\r\n        <settings>\r\n          <last-edited>Android API 21 Platform</last-edited>\r\n          <splitter-proportions>\r\n            <option name=\"proportions\">\r\n              <list>\r\n                <option value=\"0.2\" />\r\n              </list>\r\n            </option>\r\n          </splitter-proportions>\r\n        </settings>\r\n      </state>\r\n    </states>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 89aaff02c7d9a7bf84366a066f25aebbd190b50d)
+++ b/.idea/misc.xml	(date 1692543319638)
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="DesignSurface">
     <option name="filePathToZoomLevelMap">
@@ -8,7 +7,7 @@
       </map>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: .idea/kotlinc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"Kotlin2JvmCompilerArguments\">\r\n    <option name=\"jvmTarget\" value=\"1.8\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/kotlinc.xml b/.idea/kotlinc.xml
--- a/.idea/kotlinc.xml	(revision 89aaff02c7d9a7bf84366a066f25aebbd190b50d)
+++ b/.idea/kotlinc.xml	(date 1681302785455)
@@ -3,4 +3,7 @@
   <component name="Kotlin2JvmCompilerArguments">
     <option name="jvmTarget" value="1.8" />
   </component>
+  <component name="KotlinJpsPluginSettings">
+    <option name="version" value="1.7.20" />
+  </component>
 </project>
\ No newline at end of file
