// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        compileSdk = 29
        buildSdk = '29.0.2'
        minSdk = 21
        targetSdk = 29
        kotlin_version = '1.4.10'

        constraintlayout = 'androidx.constraintlayout:constraintlayout:2.0.0-beta3'

        navigation_fragment_ktx = 'androidx.navigation:navigation-fragment-ktx:2.2.0-rc02'
        lifecycle_version = '2.2.0-rc02'
        lifecycle_extensions = "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
        lifecycle_viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

        room_version = '2.1.0-alpha04'
        room_coroutines = "androidx.room:room-coroutines:$room_version"
        room_kapt = "androidx.room:room-compiler:$room_version"

        work_runtime_ktx = 'androidx.work:work-runtime-ktx:2.3.0-alpha03'

        retrofit_version = '2.6.2'
        retrofit = "com.squareup.retrofit2:retrofit:$retrofit_version"
        retrofit_moshi = "com.squareup.retrofit2:converter-moshi:$retrofit_version"
        logging_interceptor = 'com.squareup.okhttp3:logging-interceptor:4.2.2'

        moshi_version = '1.9.2'
        moshi = "com.squareup.moshi:moshi-kotlin:$moshi_version"
        moshi_kapt = "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

        glide_version = '4.10.0'
        glide = "com.github.bumptech.glide:glide:$glide_version"
        glide_okhttp = "com.github.bumptech.glide:okhttp3-integration:$glide_version"
        gilde_kapt = "com.github.bumptech.glide:compiler:$glide_version"

        smart_refresh = 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-andx-4'
        lottie = 'com.airbnb.android:lottie:3.1.0'

        mmkv = 'com.tencent:mmkv:1.0.22'

        arouter_api = 'com.alibaba:arouter-api:1.5.0'
        arouter_kapt = 'com.alibaba:arouter-compiler:1.2.2'

        recyclerView = 'com.android.support:recyclerview-v7:28.0.0-alpha1'

        paging_version = "3.0.0-alpha01"
        // For Kotlin use paging-runtime-ktx
        paging = "androidx.paging:paging-runtime:$paging_version"
        // For Kotlin use paging-common-ktx
        paging_common = "androidx.paging:paging-common:$paging_version"
        // For Kotlin use paging-rxjava2-ktx
        paging_rxjava2 = "androidx.paging:paging-rxjava2:$paging_version"
        //anko
        anko_version = '0.10.8'
        anko = "org.jetbrains.anko:anko:$anko_version"
        //图片选择框架
        material = "com.google.android.material:material:1.2.1"

        //hilt
        hilt_version = '2.28-alpha'
        hilt_android = "com.google.dagger:hilt-android:$hilt_version"
        hilt_kapt = "com.google.dagger:hilt-android-compiler:$hilt_version"
        hilt_lifecycle_viewmodel = 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha01'
        hilt_androidx_kapt = 'androidx.hilt:hilt-compiler:1.0.0-alpha01'
    }
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.gms:google-services:4.3.4'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0'
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://maven.aliyun.com/repository/google" }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
